generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}

model User {
  id            String   @id
  name          String
  email         String
  emailVerified Boolean
  image         String?
  createdAt     DateTime
  updatedAt     DateTime

  sessions     Session[]
  accounts     Account[]
  transactions Transaction[]
  categories   Category[]

  @@unique([email])
  @@map("user")
}

model Session {
  id        String   @id
  expiresAt DateTime
  token     String
  createdAt DateTime
  updatedAt DateTime
  ipAddress String?
  userAgent String?
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([token])
  @@map("session")
}

model Account {
  id                    String    @id
  accountId             String
  providerId            String
  userId                String
  user                  User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken           String?
  refreshToken          String?
  idToken               String?
  accessTokenExpiresAt  DateTime?
  refreshTokenExpiresAt DateTime?
  scope                 String?
  password              String?
  createdAt             DateTime
  updatedAt             DateTime

  @@map("account")
}

model Verification {
  id         String    @id
  identifier String
  value      String
  expiresAt  DateTime
  createdAt  DateTime?
  updatedAt  DateTime?

  @@map("verification")
}

model Transaction {
  id         String          @id @default(ulid())
  note       String?
  categoryId String
  createdBy  String
  amount     Int
  type       TransactionType
  date       DateTime?

  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  user     User     @relation(fields: [createdBy], references: [id])
  category Category @relation(fields: [categoryId], references: [id])
}

model Category {
  id        String  @id @default(ulid())
  name      String
  color     String
  createdBy String?

  user User? @relation(fields: [createdBy], references: [id])

  transactions Transaction[]
}

enum TransactionType {
  INCOME
  EXPENSE
}
